<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status, 这个用于设置log4j2自身内部的信息输出, 可以不设置, 当设置成trace时, 你会看到log4j2内部各种详细输出-->
<!--monitorInterval: Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数-->
<Configuration monitorInterval="30">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL-->
    <!--变量配置-->
    <Properties>
        <!--格式化输出: %date表示日期, %thread表示线程名, %-5level表示级别从左显示5个字符宽度, %logger{36}表示Logger名字最长36个字符, %msg表示日志消息, %n表示换行符-->
        <Property name="LOG_PATTERN" value="%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
        <!--定义日志存储的路径-->
        <Property name="FILE_PATH" value="logs/task-service/"/>
        <Property name="FILE_NAME" value="task-service"/>
    </Properties>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout
                    pattern="%style{%d{ISO8601}}{bright,green} %highlight{%-5level} [%style{%t}{bright,blue}] %style{%C{}}{bright,yellow}: %msg%n%style{%throwable}{red}"
                    disableAnsi="false" noConsoleNoAnsi="false"/>
            <!--控制台只输出level及其以上级别的信息(onMatch), 其他的直接拒绝(onMismatch)-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </Console>
        <!--这个会打印出所有的info及以下级别的信息, 每次大小超过size, 则size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log"
                     filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">
            <Filters>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次, 默认是1hour-->
                <TimeBasedTriggeringPolicy interval="1"/>
                <!--size属性用来指定文件大小达到多少时才滚动, 50MB-->
                <SizeBasedTriggeringPolicy size="50MB"/>
            </Policies>
            <!--DefaultRolloverStrategy属性如不设置, 则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>
        <!--这个会打印出所有的error及以下级别的信息, 每次大小超过size, 则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩作为存档-->
        <RollingFile name="RollingFileError" fileName="${FILE_PATH}/error.log"
                     filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="50MB"/>
            </Policies>
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>
    </Appenders>
    <!--Logger节点用来单独指定日志的形式, 比如要为指定包下的class指定不同的日志级别等-->
    <!--然后定义loggers, 只有定义了logger并引入的appender, appender才会生效-->
    <Loggers>
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileInfo"/>
            <AppenderRef ref="RollingFileError"/>
        </Root>
    </Loggers>
</Configuration>